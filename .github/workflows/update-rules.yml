name: Update Rules

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 0 点运行
  workflow_dispatch:  # 手动触发
  push:
    branches:
      - main
  repository_dispatch:  # 通过 API 触发
  watch:  # 监听源仓库更新

jobs:
  update-rules:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          ref: main  # 先检出 main 分支

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate rules
        run: |
          python generate_rules.py

      - name: Check generated files
        run: |
          # 检查规则文件是否生成
          if [ ! -d "geosite" ] || [ ! -d "geoip" ]; then
            echo "错误：规则文件未生成"
            exit 1
          fi
          # 检查更新相关文件是否生成
          if [ ! -f "rule_hashes.json" ] || [ ! -f "update_report.txt" ]; then
            echo "错误：更新相关文件未生成"
            exit 1
          fi

      - name: Create release branch
        run: |
          # 如果 release 分支已存在，先删除
          git branch -D release || true
          # 创建新的 release 分支
          git checkout --orphan release
          # 添加规则文件和更新相关文件
          git add geosite/ geoip/ rule_hashes.json update_report.txt
          git commit -m "chore: update rules and rule hashes"

      - name: Push to release branch
        run: |
          git push origin release --force

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false 